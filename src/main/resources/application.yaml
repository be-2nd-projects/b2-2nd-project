server:
  port: 8080
spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  security:
    user:
      name: user
      password: 1234
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/google # 구글 리디렉션 URI
            scope:
              - email
              - profile
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver # 네이버 리디렉션 URI
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope:
              - account_email
              - profile_nickname
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao # 카카오 리디렉션 URI
            client-name: Kakao
            client-authentication-method: POST
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원 정보를 json으로 받는데 response 라는 키값으로 네이버가 리턴해줌
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  datasource:
    username: ${DATABASE_USERNAME} # 환경변수에 설정함 DATABASE_USERNAME=root;
    password: ${DATABASE_PASSWORD} # 환경변수에 설정함 DATABASE_PASSWORD= *****;
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://project-1.c5mic2ksgw7b.ap-northeast-2.rds.amazonaws.com:3306/innodb
jpa:
  hibernate:
    ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        generate_statistics: true
logging:
  level:
    org.hibernate.SQL: ERROR
    org.hibernate.type: ERROR
    org.hibernate.type.descriptor.sql: ERROR
    org.hibernate.stat: ERROR
jwt:
  secret-key-source: ${JWT_SECRET_KEY}  # ${JWT_SECRET_KEY} = super-coding의 실제 값으로 설정
